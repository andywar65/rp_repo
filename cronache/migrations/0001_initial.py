# Generated by Django 3.0.5 on 2020-04-22 21:17

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import filebrowser.fields
import streamfield.fields
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fb_image', filebrowser.fields.FileBrowseField(blank=True, max_length=200, null=True, verbose_name='Immagine')),
                ('title', models.CharField(help_text='Il nome del luogo', max_length=50, verbose_name='Titolo')),
                ('slug', models.SlugField(unique=True)),
                ('address', models.CharField(help_text='Via/Piazza, civico, CAP, Città', max_length=200, verbose_name='Indirizzo')),
                ('gmap_link', models.URLField(blank=True, help_text="Dal menu di Google Maps seleziona 'Condividi/link',                    copia il link e incollalo qui", null=True, verbose_name='Link di Google Map')),
                ('gmap_embed', models.TextField(blank=True, help_text="Dal menu di Google Maps seleziona 'Condividi/incorpora',                    copia il link e incollalo qui", max_length=500, null=True, verbose_name='Incorpora Google Map')),
                ('body', models.TextField(blank=True, null=True, verbose_name='Descrizione')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Sito internet')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=50, null=True, verbose_name='Telefono/i')),
            ],
            options={
                'verbose_name': 'Luogo',
                'verbose_name_plural': 'Luoghi',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fb_image', filebrowser.fields.FileBrowseField(blank=True, max_length=200, null=True, verbose_name='Immagine')),
                ('carousel', streamfield.fields.StreamField(blank=True, default='[]', help_text='Una sola galleria, per favore, larghezza minima immagini 2048px', null=True, verbose_name='Galleria')),
                ('title', models.CharField(help_text="Il titolo dell'evento", max_length=50, verbose_name='Titolo')),
                ('slug', models.SlugField(editable=False, null=True)),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Quando')),
                ('last_updated', models.DateTimeField(editable=False, null=True)),
                ('intro', models.CharField(default='Un altro appuntamento con RP!', max_length=100, verbose_name='Introduzione')),
                ('stream', streamfield.fields.StreamField(blank=True, default='[]', verbose_name='Lancio')),
                ('upgrade_stream', streamfield.fields.StreamField(blank=True, default='[]', verbose_name='Aggiornamenti')),
                ('chron_stream', streamfield.fields.StreamField(blank=True, default='[]', verbose_name='Cronaca')),
                ('restr_stream', streamfield.fields.StreamField(blank=True, default='[]', help_text='Inserisci qui materiale riservato ai soci', verbose_name='Area riservata')),
                ('stream_search', models.TextField(editable=False, null=True)),
                ('notice', models.CharField(blank=True, choices=[('NOSP', 'Non inviare'), ('SPAM', 'Da inviare'), ('DONE', 'Già inviata')], help_text="Invia notifica in automatico selezionando\n            'Invia notifica' e salvando l'articolo.\n            ", max_length=4, null=True, verbose_name='Notifica via email')),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cronache.Location', verbose_name='Dove')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Responsabile')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='Lista di categorie separate da virgole', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Categorie')),
            ],
            options={
                'verbose_name': 'Evento',
                'verbose_name_plural': 'Eventi',
                'ordering': ('-date',),
            },
        ),
    ]
